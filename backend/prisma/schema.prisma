generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  username  String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile?
  products  Product[]
  carts     Cart[] 
}

model Profile {
  id        Int      @id @default(autoincrement())
  phone     String
  image     String
  gender    String
  address   String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId Int  @unique
}

model Product {
  id          Int      @id @default(autoincrement())
  image       String
  productName String
  productDesc String
  price       Float
  qty         Int
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id],onDelete: Cascade)
  userId      Int
  user        User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  cartItems   CartItem[] 

  @@map("tb_product")
}

model Category {
  id           Int    @id @default(autoincrement())
  categoryName String

  products Product[]

  @@map("tb_category")
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     CartItem[] 
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("tb_cart")
}

model CartItem {
  id         Int      @id @default(autoincrement())
  cartId     Int
  cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int     
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("tb_cart_item")
}

enum Role {
  USER
  ADMIN
}
